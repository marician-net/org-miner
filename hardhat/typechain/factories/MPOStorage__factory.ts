/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MPOStorage } from "../MPOStorage";

export class MPOStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MPOStorage> {
    return super.deploy(overrides || {}) as Promise<MPOStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MPOStorage {
    return super.attach(address) as MPOStorage;
  }
  connect(signer: Signer): MPOStorage__factory {
    return super.connect(signer) as MPOStorage__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MPOStorage {
    return new Contract(address, _abi, signerOrProvider) as MPOStorage;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "responder",
        type: "address",
      },
    ],
    name: "tallyAddress",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getResponders",
    outputs: [
      {
        name: "",
        type: "address[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "responder",
        type: "address",
      },
    ],
    name: "getAddressTally",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "party",
        type: "address",
      },
    ],
    name: "addResponse",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
    ],
    name: "getQueryThreshold",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "index",
        type: "uint256",
      },
    ],
    name: "getResponderAddress",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
    ],
    name: "getThreshold",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "sender",
        type: "address",
      },
    ],
    name: "reachedThreshold",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
    ],
    name: "getPrecision",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "party",
        type: "address",
      },
    ],
    name: "getThresholdStatus",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
    ],
    name: "getDelta",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "_delta",
        type: "uint256",
      },
    ],
    name: "setDelta",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getNumResponders",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "parties",
        type: "address[]",
      },
    ],
    name: "setResponders",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "mpoId",
        type: "uint256",
      },
    ],
    name: "getClientQueryId",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
    ],
    name: "getQueryStatus",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
    ],
    name: "getResponses",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
    ],
    name: "getAverage",
    outputs: [
      {
        name: "",
        type: "int256[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "response",
        type: "uint256",
      },
    ],
    name: "tallyResponse",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "status",
        type: "uint256",
      },
    ],
    name: "setQueryStatus",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "responder",
        type: "address",
      },
    ],
    name: "getAddressResponse",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "mpoId",
        type: "uint256",
      },
      {
        name: "_clientQueryId",
        type: "uint256",
      },
    ],
    name: "setClientQueryId",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "setThreshold",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
    ],
    name: "getThresholdResponses",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "response",
        type: "uint256",
      },
    ],
    name: "getTally",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "party",
        type: "address",
      },
    ],
    name: "getAddressStatus",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "_precision",
        type: "uint256",
      },
    ],
    name: "setPrecision",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "response",
        type: "uint256",
      },
    ],
    name: "addThresholdResponse",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "queryId",
        type: "uint256",
      },
      {
        name: "party",
        type: "address",
      },
    ],
    name: "onlyOneResponse",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
];

const _bytecode =
  "0x60806040526005601155336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d2b806100586000396000f3fe608060405260043610610185576000357c010000000000000000000000000000000000000000000000000000000090048063090d42591461018a57806312faae93146101e55780631518ec5614610251578063287d3d36146102c05780633b7bff7f1461031b5780634155b8501461036e5780634615d5e9146103e95780634c0f8073146104385780634c5738281461049357806350d48de0146104e257806356322586146105555780635ba4edb6146105a4578063602bb04f146105e9578063664c0bf9146106145780636cc9354f1461069a5780636f07abcc146106e957806371ee2ce114610738578063732d161c146107c85780637d210c311461085857806381f668441461089d57806387e02828146108e25780638be8f272146109515780638da5cb5b14610996578063b9c36209146109ed578063bdbc015314610a32578063cdae1fba14610ac2578063e226a1b614610b1b578063e600505f14610b84578063f2fde38b14610bc9578063f43fd6f014610c1a578063fe151a9614610c5f575b600080fd5b34801561019657600080fd5b506101e3600480360360408110156101ad57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cd2565b005b3480156101f157600080fd5b506101fa610d91565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561023d578082015181840152602081019050610222565b505050509050019250505060405180910390f35b34801561025d57600080fd5b506102aa6004803603604081101561027457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e1f565b6040518082815260200191505060405180910390f35b3480156102cc57600080fd5b50610319600480360360408110156102e357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e7a565b005b34801561032757600080fd5b506103546004803603602081101561033e57600080fd5b8101908080359060200190929190505050610f42565b604051808215151515815260200191505060405180910390f35b34801561037a57600080fd5b506103a76004803603602081101561039157600080fd5b8101908080359060200190929190505050610f6c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103f557600080fd5b506104226004803603602081101561040c57600080fd5b8101908080359060200190929190505050610faf565b6040518082815260200191505060405180910390f35b34801561044457600080fd5b506104916004803603604081101561045b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fcc565b005b34801561049f57600080fd5b506104cc600480360360208110156104b657600080fd5b81019080803590602001909291905050506110c0565b6040518082815260200191505060405180910390f35b3480156104ee57600080fd5b5061053b6004803603604081101561050557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110dd565b604051808215151515815260200191505060405180910390f35b34801561056157600080fd5b5061058e6004803603602081101561057857600080fd5b8101908080359060200190929190505050611145565b6040518082815260200191505060405180910390f35b3480156105b057600080fd5b506105e7600480360360408110156105c757600080fd5b810190808035906020019092919080359060200190929190505050611162565b005b3480156105f557600080fd5b506105fe61117e565b6040518082815260200191505060405180910390f35b34801561062057600080fd5b506106986004803603602081101561063757600080fd5b810190808035906020019064010000000081111561065457600080fd5b82018360208201111561066657600080fd5b8035906020019184602083028401116401000000008311171561068857600080fd5b9091929391929390505050611188565b005b3480156106a657600080fd5b506106d3600480360360208110156106bd57600080fd5b81019080803590602001909291905050506112bf565b6040518082815260200191505060405180910390f35b3480156106f557600080fd5b506107226004803603602081101561070c57600080fd5b81019080803590602001909291905050506112dc565b6040518082815260200191505060405180910390f35b34801561074457600080fd5b506107716004803603602081101561075b57600080fd5b81019080803590602001909291905050506112f9565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107b4578082015181840152602081019050610799565b505050509050019250505060405180910390f35b3480156107d457600080fd5b50610801600480360360208110156107eb57600080fd5b8101908080359060200190929190505050611364565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610844578082015181840152602081019050610829565b505050509050019250505060405180910390f35b34801561086457600080fd5b5061089b6004803603604081101561087b57600080fd5b81019080803590602001909291908035906020019092919050505061163f565b005b3480156108a957600080fd5b506108e0600480360360408110156108c057600080fd5b8101908080359060200190929190803590602001909291905050506116d2565b005b3480156108ee57600080fd5b5061093b6004803603604081101561090557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611749565b6040518082815260200191505060405180910390f35b34801561095d57600080fd5b506109946004803603604081101561097457600080fd5b8101908080359060200190929190803590602001909291905050506117a4565b005b3480156109a257600080fd5b506109ab61181b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109f957600080fd5b50610a3060048036036040811015610a1057600080fd5b810190808035906020019092919080359060200190929190505050611840565b005b348015610a3e57600080fd5b50610a6b60048036036020811015610a5557600080fd5b81019080803590602001909291905050506118b7565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610aae578082015181840152602081019050610a93565b505050509050019250505060405180910390f35b348015610ace57600080fd5b50610b0560048036036040811015610ae557600080fd5b810190808035906020019092919080359060200190929190505050611922565b6040518082815260200191505060405180910390f35b348015610b2757600080fd5b50610b6a60048036036020811015610b3e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611951565b604051808215151515815260200191505060405180910390f35b348015610b9057600080fd5b50610bc760048036036040811015610ba757600080fd5b8101908080359060200190929190803590602001909291905050506119a7565b005b348015610bd557600080fd5b50610c1860048036036020811015610bec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119c3565b005b348015610c2657600080fd5b50610c5d60048036036040811015610c3d57600080fd5b810190808035906020019092919080359060200190929190505050611b18565b005b348015610c6b57600080fd5b50610cb860048036036040811015610c8257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bb4565b604051808215151515815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d2d57600080fd5b6007600083815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055505050565b60606010805480602002602001604051908101604052809291908181526020018280548015610e1557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610dcb575b5050505050905090565b60006007600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ed557600080fd5b6001600b600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60006003600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000601082815481101515610f7d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600f6000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561102757600080fd5b60016002600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060016003600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000600d6000838152602001908152602001600020549050919050565b60006002600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600e6000838152602001908152602001600020549050919050565b80600e6000848152602001908152602001600020819055505050565b6000601154905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111e357600080fd5b8181601091906111f4929190611c1c565b5081819050601154111561120d57818190506011819055505b60008090505b6011548110156112ba57600180600060108481548110151561123157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080600101915050611213565b505050565b6000600c6000838152602001908152602001600020549050919050565b600060046000838152602001908152602001600020549050919050565b60606008600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561135857602002820191906000526020600020905b815481526020019060010190808311611344575b50505050509050919050565b60606000601080549050141515156113e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4469766973696f6e206572726f7200000000000000000000000000000000000081525060200191505060405180910390fd5b6000809050600080905060008090505b60115481101561153e5760026000868152602001908152602001600020600060108381548110151561142257fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156115315781806001019250506006600086815260200190815260200160002060006010838154811015156114c657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054830192505b80806001019150506113f4565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821015156115d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4f766572666c6f77206572726f7228676574417665726167652900000000000081525060200191505060405180910390fd5b606060016040519080825280602002602001820160405280156116085781602001602082028038833980820191505090505b509050818381151561161657fe5b0581600081518110151561162657fe5b9060200190602002018181525050809350505050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561169a57600080fd5b600560008381526020019081526020016000206000828152602001908152602001600020600081548092919060010191905055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561172d57600080fd5b8060046000848152602001908152602001600020819055505050565b60006006600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117ff57600080fd5b80600c6000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561189b57600080fd5b80600f6000848152602001908152602001600020819055505050565b60606009600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561191657602002820191906000526020600020905b815481526020019060010190808311611902575b50505050509050919050565b600060056000848152602001908152602001600020600083815260200190815260200160002054905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b80600d6000848152602001908152602001600020819055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a1e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611a5a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b7357600080fd5b600960008381526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6000600b600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054828255906000526020600020908101928215611cab579160200282015b82811115611caa57823573ffffffffffffffffffffffffffffffffffffffff168260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611c3c565b5b509050611cb89190611cbc565b5090565b611cfc91905b80821115611cf857600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101611cc2565b5090565b9056fea165627a7a723058205625148f7368a6279b4b31ba6c1246acb9100ea9cfa12a339bbb09bcb7b5bd540029";
