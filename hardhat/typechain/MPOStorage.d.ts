/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface MPOStorageInterface extends ethers.utils.Interface {
  functions: {
    "tallyAddress(uint256,address)": FunctionFragment;
    "getResponders()": FunctionFragment;
    "getAddressTally(uint256,address)": FunctionFragment;
    "addResponse(uint256,address)": FunctionFragment;
    "getQueryThreshold(uint256)": FunctionFragment;
    "getResponderAddress(uint256)": FunctionFragment;
    "getThreshold(uint256)": FunctionFragment;
    "reachedThreshold(uint256,address)": FunctionFragment;
    "getPrecision(uint256)": FunctionFragment;
    "getThresholdStatus(uint256,address)": FunctionFragment;
    "getDelta(uint256)": FunctionFragment;
    "setDelta(uint256,uint256)": FunctionFragment;
    "getNumResponders()": FunctionFragment;
    "setResponders(address[])": FunctionFragment;
    "getClientQueryId(uint256)": FunctionFragment;
    "getQueryStatus(uint256)": FunctionFragment;
    "getResponses(uint256)": FunctionFragment;
    "getAverage(uint256)": FunctionFragment;
    "tallyResponse(uint256,uint256)": FunctionFragment;
    "setQueryStatus(uint256,uint256)": FunctionFragment;
    "getAddressResponse(uint256,address)": FunctionFragment;
    "setClientQueryId(uint256,uint256)": FunctionFragment;
    "owner()": FunctionFragment;
    "setThreshold(uint256,uint256)": FunctionFragment;
    "getThresholdResponses(uint256)": FunctionFragment;
    "getTally(uint256,uint256)": FunctionFragment;
    "getAddressStatus(address)": FunctionFragment;
    "setPrecision(uint256,uint256)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
    "addThresholdResponse(uint256,uint256)": FunctionFragment;
    "onlyOneResponse(uint256,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "tallyAddress",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getResponders",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAddressTally",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "addResponse",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getQueryThreshold",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getResponderAddress",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getThreshold",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "reachedThreshold",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getPrecision",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getThresholdStatus",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getDelta",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setDelta",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getNumResponders",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setResponders",
    values: [string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getClientQueryId",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getQueryStatus",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getResponses",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAverage",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "tallyResponse",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setQueryStatus",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAddressResponse",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setClientQueryId",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setThreshold",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getThresholdResponses",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTally",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAddressStatus",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setPrecision",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "addThresholdResponse",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onlyOneResponse",
    values: [BigNumberish, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "tallyAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getResponders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAddressTally",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addResponse",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getQueryThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getResponderAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "reachedThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPrecision",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getThresholdStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getDelta", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setDelta", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getNumResponders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setResponders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getClientQueryId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getQueryStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getResponses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getAverage", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tallyResponse",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setQueryStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAddressResponse",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setClientQueryId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getThresholdResponses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getTally", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getAddressStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPrecision",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addThresholdResponse",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onlyOneResponse",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export class MPOStorage extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: MPOStorageInterface;

  functions: {
    tallyAddress(
      queryId: BigNumberish,
      responder: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "tallyAddress(uint256,address)"(
      queryId: BigNumberish,
      responder: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getResponders(overrides?: CallOverrides): Promise<[string[]]>;

    "getResponders()"(overrides?: CallOverrides): Promise<[string[]]>;

    getAddressTally(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAddressTally(uint256,address)"(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    addResponse(
      queryId: BigNumberish,
      party: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "addResponse(uint256,address)"(
      queryId: BigNumberish,
      party: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getQueryThreshold(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "getQueryThreshold(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getResponderAddress(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getResponderAddress(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getThreshold(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getThreshold(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    reachedThreshold(
      queryId: BigNumberish,
      sender: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "reachedThreshold(uint256,address)"(
      queryId: BigNumberish,
      sender: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getPrecision(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getPrecision(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getThresholdStatus(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "getThresholdStatus(uint256,address)"(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    getDelta(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getDelta(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    setDelta(
      queryId: BigNumberish,
      _delta: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setDelta(uint256,uint256)"(
      queryId: BigNumberish,
      _delta: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getNumResponders(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getNumResponders()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    setResponders(
      parties: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setResponders(address[])"(
      parties: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getClientQueryId(
      mpoId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getClientQueryId(uint256)"(
      mpoId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getQueryStatus(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getQueryStatus(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getResponses(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "getResponses(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getAverage(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "getAverage(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    tallyResponse(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "tallyResponse(uint256,uint256)"(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setQueryStatus(
      queryId: BigNumberish,
      status: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setQueryStatus(uint256,uint256)"(
      queryId: BigNumberish,
      status: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getAddressResponse(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAddressResponse(uint256,address)"(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    setClientQueryId(
      mpoId: BigNumberish,
      _clientQueryId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setClientQueryId(uint256,uint256)"(
      mpoId: BigNumberish,
      _clientQueryId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    setThreshold(
      queryId: BigNumberish,
      _threshold: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setThreshold(uint256,uint256)"(
      queryId: BigNumberish,
      _threshold: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getThresholdResponses(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "getThresholdResponses(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    getTally(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getTally(uint256,uint256)"(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAddressStatus(
      party: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "getAddressStatus(address)"(
      party: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    setPrecision(
      queryId: BigNumberish,
      _precision: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setPrecision(uint256,uint256)"(
      queryId: BigNumberish,
      _precision: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addThresholdResponse(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "addThresholdResponse(uint256,uint256)"(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    onlyOneResponse(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "onlyOneResponse(uint256,address)"(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  tallyAddress(
    queryId: BigNumberish,
    responder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "tallyAddress(uint256,address)"(
    queryId: BigNumberish,
    responder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getResponders(overrides?: CallOverrides): Promise<string[]>;

  "getResponders()"(overrides?: CallOverrides): Promise<string[]>;

  getAddressTally(
    queryId: BigNumberish,
    responder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAddressTally(uint256,address)"(
    queryId: BigNumberish,
    responder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  addResponse(
    queryId: BigNumberish,
    party: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "addResponse(uint256,address)"(
    queryId: BigNumberish,
    party: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getQueryThreshold(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "getQueryThreshold(uint256)"(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getResponderAddress(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getResponderAddress(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getThreshold(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getThreshold(uint256)"(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  reachedThreshold(
    queryId: BigNumberish,
    sender: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "reachedThreshold(uint256,address)"(
    queryId: BigNumberish,
    sender: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getPrecision(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getPrecision(uint256)"(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getThresholdStatus(
    queryId: BigNumberish,
    party: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "getThresholdStatus(uint256,address)"(
    queryId: BigNumberish,
    party: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  getDelta(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getDelta(uint256)"(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setDelta(
    queryId: BigNumberish,
    _delta: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setDelta(uint256,uint256)"(
    queryId: BigNumberish,
    _delta: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getNumResponders(overrides?: CallOverrides): Promise<BigNumber>;

  "getNumResponders()"(overrides?: CallOverrides): Promise<BigNumber>;

  setResponders(
    parties: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setResponders(address[])"(
    parties: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getClientQueryId(
    mpoId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getClientQueryId(uint256)"(
    mpoId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getQueryStatus(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getQueryStatus(uint256)"(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getResponses(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getResponses(uint256)"(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getAverage(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getAverage(uint256)"(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  tallyResponse(
    queryId: BigNumberish,
    response: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "tallyResponse(uint256,uint256)"(
    queryId: BigNumberish,
    response: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setQueryStatus(
    queryId: BigNumberish,
    status: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setQueryStatus(uint256,uint256)"(
    queryId: BigNumberish,
    status: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getAddressResponse(
    queryId: BigNumberish,
    responder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAddressResponse(uint256,address)"(
    queryId: BigNumberish,
    responder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setClientQueryId(
    mpoId: BigNumberish,
    _clientQueryId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setClientQueryId(uint256,uint256)"(
    mpoId: BigNumberish,
    _clientQueryId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  setThreshold(
    queryId: BigNumberish,
    _threshold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setThreshold(uint256,uint256)"(
    queryId: BigNumberish,
    _threshold: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getThresholdResponses(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getThresholdResponses(uint256)"(
    queryId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getTally(
    queryId: BigNumberish,
    response: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getTally(uint256,uint256)"(
    queryId: BigNumberish,
    response: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAddressStatus(party: string, overrides?: CallOverrides): Promise<boolean>;

  "getAddressStatus(address)"(
    party: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  setPrecision(
    queryId: BigNumberish,
    _precision: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setPrecision(uint256,uint256)"(
    queryId: BigNumberish,
    _precision: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addThresholdResponse(
    queryId: BigNumberish,
    response: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "addThresholdResponse(uint256,uint256)"(
    queryId: BigNumberish,
    response: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  onlyOneResponse(
    queryId: BigNumberish,
    party: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "onlyOneResponse(uint256,address)"(
    queryId: BigNumberish,
    party: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    tallyAddress(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "tallyAddress(uint256,address)"(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getResponders(overrides?: CallOverrides): Promise<string[]>;

    "getResponders()"(overrides?: CallOverrides): Promise<string[]>;

    getAddressTally(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAddressTally(uint256,address)"(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    addResponse(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "addResponse(uint256,address)"(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getQueryThreshold(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "getQueryThreshold(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getResponderAddress(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getResponderAddress(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getThreshold(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getThreshold(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    reachedThreshold(
      queryId: BigNumberish,
      sender: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "reachedThreshold(uint256,address)"(
      queryId: BigNumberish,
      sender: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getPrecision(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPrecision(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getThresholdStatus(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "getThresholdStatus(uint256,address)"(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    getDelta(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDelta(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setDelta(
      queryId: BigNumberish,
      _delta: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setDelta(uint256,uint256)"(
      queryId: BigNumberish,
      _delta: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getNumResponders(overrides?: CallOverrides): Promise<BigNumber>;

    "getNumResponders()"(overrides?: CallOverrides): Promise<BigNumber>;

    setResponders(parties: string[], overrides?: CallOverrides): Promise<void>;

    "setResponders(address[])"(
      parties: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    getClientQueryId(
      mpoId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getClientQueryId(uint256)"(
      mpoId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getQueryStatus(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getQueryStatus(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getResponses(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getResponses(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getAverage(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getAverage(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    tallyResponse(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "tallyResponse(uint256,uint256)"(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setQueryStatus(
      queryId: BigNumberish,
      status: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setQueryStatus(uint256,uint256)"(
      queryId: BigNumberish,
      status: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getAddressResponse(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAddressResponse(uint256,address)"(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setClientQueryId(
      mpoId: BigNumberish,
      _clientQueryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setClientQueryId(uint256,uint256)"(
      mpoId: BigNumberish,
      _clientQueryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    setThreshold(
      queryId: BigNumberish,
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setThreshold(uint256,uint256)"(
      queryId: BigNumberish,
      _threshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getThresholdResponses(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getThresholdResponses(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getTally(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTally(uint256,uint256)"(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAddressStatus(
      party: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "getAddressStatus(address)"(
      party: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setPrecision(
      queryId: BigNumberish,
      _precision: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setPrecision(uint256,uint256)"(
      queryId: BigNumberish,
      _precision: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addThresholdResponse(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "addThresholdResponse(uint256,uint256)"(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    onlyOneResponse(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "onlyOneResponse(uint256,address)"(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {
    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): TypedEventFilter<
      [string, string],
      { previousOwner: string; newOwner: string }
    >;
  };

  estimateGas: {
    tallyAddress(
      queryId: BigNumberish,
      responder: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "tallyAddress(uint256,address)"(
      queryId: BigNumberish,
      responder: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getResponders(overrides?: CallOverrides): Promise<BigNumber>;

    "getResponders()"(overrides?: CallOverrides): Promise<BigNumber>;

    getAddressTally(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAddressTally(uint256,address)"(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    addResponse(
      queryId: BigNumberish,
      party: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "addResponse(uint256,address)"(
      queryId: BigNumberish,
      party: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getQueryThreshold(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getQueryThreshold(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getResponderAddress(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getResponderAddress(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getThreshold(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getThreshold(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    reachedThreshold(
      queryId: BigNumberish,
      sender: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "reachedThreshold(uint256,address)"(
      queryId: BigNumberish,
      sender: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getPrecision(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPrecision(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getThresholdStatus(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getThresholdStatus(uint256,address)"(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDelta(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDelta(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setDelta(
      queryId: BigNumberish,
      _delta: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setDelta(uint256,uint256)"(
      queryId: BigNumberish,
      _delta: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getNumResponders(overrides?: CallOverrides): Promise<BigNumber>;

    "getNumResponders()"(overrides?: CallOverrides): Promise<BigNumber>;

    setResponders(
      parties: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setResponders(address[])"(
      parties: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getClientQueryId(
      mpoId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getClientQueryId(uint256)"(
      mpoId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getQueryStatus(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getQueryStatus(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getResponses(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getResponses(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAverage(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAverage(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tallyResponse(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "tallyResponse(uint256,uint256)"(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setQueryStatus(
      queryId: BigNumberish,
      status: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setQueryStatus(uint256,uint256)"(
      queryId: BigNumberish,
      status: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getAddressResponse(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAddressResponse(uint256,address)"(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setClientQueryId(
      mpoId: BigNumberish,
      _clientQueryId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setClientQueryId(uint256,uint256)"(
      mpoId: BigNumberish,
      _clientQueryId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    setThreshold(
      queryId: BigNumberish,
      _threshold: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setThreshold(uint256,uint256)"(
      queryId: BigNumberish,
      _threshold: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getThresholdResponses(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getThresholdResponses(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTally(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTally(uint256,uint256)"(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAddressStatus(
      party: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAddressStatus(address)"(
      party: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setPrecision(
      queryId: BigNumberish,
      _precision: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setPrecision(uint256,uint256)"(
      queryId: BigNumberish,
      _precision: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addThresholdResponse(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "addThresholdResponse(uint256,uint256)"(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    onlyOneResponse(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "onlyOneResponse(uint256,address)"(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    tallyAddress(
      queryId: BigNumberish,
      responder: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "tallyAddress(uint256,address)"(
      queryId: BigNumberish,
      responder: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getResponders(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getResponders()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getAddressTally(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAddressTally(uint256,address)"(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    addResponse(
      queryId: BigNumberish,
      party: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "addResponse(uint256,address)"(
      queryId: BigNumberish,
      party: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getQueryThreshold(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getQueryThreshold(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getResponderAddress(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getResponderAddress(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getThreshold(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getThreshold(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    reachedThreshold(
      queryId: BigNumberish,
      sender: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "reachedThreshold(uint256,address)"(
      queryId: BigNumberish,
      sender: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getPrecision(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPrecision(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getThresholdStatus(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getThresholdStatus(uint256,address)"(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDelta(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDelta(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setDelta(
      queryId: BigNumberish,
      _delta: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setDelta(uint256,uint256)"(
      queryId: BigNumberish,
      _delta: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getNumResponders(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getNumResponders()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setResponders(
      parties: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setResponders(address[])"(
      parties: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getClientQueryId(
      mpoId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getClientQueryId(uint256)"(
      mpoId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getQueryStatus(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getQueryStatus(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getResponses(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getResponses(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAverage(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAverage(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tallyResponse(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "tallyResponse(uint256,uint256)"(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setQueryStatus(
      queryId: BigNumberish,
      status: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setQueryStatus(uint256,uint256)"(
      queryId: BigNumberish,
      status: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getAddressResponse(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAddressResponse(uint256,address)"(
      queryId: BigNumberish,
      responder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setClientQueryId(
      mpoId: BigNumberish,
      _clientQueryId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setClientQueryId(uint256,uint256)"(
      mpoId: BigNumberish,
      _clientQueryId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setThreshold(
      queryId: BigNumberish,
      _threshold: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setThreshold(uint256,uint256)"(
      queryId: BigNumberish,
      _threshold: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getThresholdResponses(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getThresholdResponses(uint256)"(
      queryId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTally(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTally(uint256,uint256)"(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAddressStatus(
      party: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAddressStatus(address)"(
      party: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setPrecision(
      queryId: BigNumberish,
      _precision: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setPrecision(uint256,uint256)"(
      queryId: BigNumberish,
      _precision: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addThresholdResponse(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "addThresholdResponse(uint256,uint256)"(
      queryId: BigNumberish,
      response: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    onlyOneResponse(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "onlyOneResponse(uint256,address)"(
      queryId: BigNumberish,
      party: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
